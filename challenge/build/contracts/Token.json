{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Token.sol"
  },
  "ast": {
    "absolutePath": "contracts/Token.sol",
    "exportedSymbols": {
      "Token": [
        175
      ]
    },
    "id": 176,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Token",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 175,
        "linearizedBaseContracts": [
          175
        ],
        "name": "Token",
        "nameLocation": "73:5:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 3,
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "100:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 175,
            "src": "85:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "85:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 5,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "131:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 175,
            "src": "117:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "117:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9,
            "mutability": "mutable",
            "name": "balance",
            "nameLocation": "169:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 175,
            "src": "141:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 8,
              "keyType": {
                "id": 6,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "149:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "141:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 7,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "160:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "allowance",
            "nameLocation": "230:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 175,
            "src": "182:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 10,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "190:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "182:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 13,
                "keyType": {
                  "id": 11,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "209:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "201:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "220:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 17,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "260:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 175,
            "src": "245:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 16,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "245:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "286:130:0",
              "statements": [
                {
                  "expression": {
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "296:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 21,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "304:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "304:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "296:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "296:18:0"
                },
                {
                  "expression": {
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "324:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31303030",
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "338:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "324:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "324:18:0"
                },
                {
                  "expression": {
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "352:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "546f6b656e",
                      "id": 30,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "359:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73",
                        "typeString": "literal_string \"Token\""
                      },
                      "value": "Token"
                    },
                    "src": "352:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "352:14:0"
                },
                {
                  "expression": {
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 33,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "376:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 36,
                      "indexExpression": {
                        "expression": {
                          "id": 34,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "384:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "384:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "376:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "398:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "376:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "376:33:0"
                }
              ]
            },
            "id": 41,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "283:2:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "286:0:0"
            },
            "scope": 175,
            "src": "272:144:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "486:38:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 48,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "503:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 50,
                    "indexExpression": {
                      "id": 49,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "511:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "503:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 47,
                  "id": 51,
                  "nodeType": "Return",
                  "src": "496:21:0"
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 53,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "431:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "449:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "441:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "440:15:0"
            },
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "477:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "476:9:0"
            },
            "scope": 175,
            "src": "422:102:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "600:212:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 63,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "618:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 66,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "633:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 65,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "625:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 64,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "625:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "625:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "618:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 62,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "610:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "610:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "610:26:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 72,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "654:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 75,
                          "indexExpression": {
                            "expression": {
                              "id": 73,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "662:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "662:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "654:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 76,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "677:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "654:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f742073756666696369656e742062616c616e6365",
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "686:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_edabb21ec0a46eaf1d9fd40ec52b23294569d1ceb2e7db1ee58bd05e40e78d26",
                          "typeString": "literal_string \"not sufficient balance\""
                        },
                        "value": "not sufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_edabb21ec0a46eaf1d9fd40ec52b23294569d1ceb2e7db1ee58bd05e40e78d26",
                          "typeString": "literal_string \"not sufficient balance\""
                        }
                      ],
                      "id": 71,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "646:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "646:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "646:65:0"
                },
                {
                  "expression": {
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 81,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "721:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 84,
                      "indexExpression": {
                        "expression": {
                          "id": 82,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "729:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "729:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "721:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 85,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "744:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "721:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "721:30:0"
                },
                {
                  "expression": {
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 88,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "761:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 90,
                      "indexExpression": {
                        "id": 89,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "769:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "761:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 91,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "777:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "761:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "761:23:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "801:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 61,
                  "id": 95,
                  "nodeType": "Return",
                  "src": "794:11:0"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 97,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "539:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "556:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "548:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "569:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "561:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "547:30:0"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "594:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "594:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "593:6:0"
            },
            "scope": 175,
            "src": "530:282:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "892:120:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 107,
                          "name": "_spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "910:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "930:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "922:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 108,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "922:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "922:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "910:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 106,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "902:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "902:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "902:31:0"
                },
                {
                  "expression": {
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 115,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "943:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 119,
                        "indexExpression": {
                          "expression": {
                            "id": 116,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "953:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "953:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "943:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 120,
                      "indexExpression": {
                        "id": 118,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "965:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "943:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 121,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "977:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "943:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "943:41:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1001:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 105,
                  "id": 125,
                  "nodeType": "Return",
                  "src": "994:11:0"
                }
              ]
            },
            "functionSelector": "095ea7b3",
            "id": 127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "827:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "843:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "835:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "861:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "853:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "834:35:0"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "886:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "886:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "885:6:0"
            },
            "scope": 175,
            "src": "818:194:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "1137:263:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 139,
                              "name": "allowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "1168:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 141,
                            "indexExpression": {
                              "id": 140,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "1178:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1168:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 144,
                          "indexExpression": {
                            "expression": {
                              "id": 142,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1185:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1185:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1168:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 145,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "1200:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1168:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420416c6c6f77616e6365",
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1221:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f0ff8cd200538bae802ddf9006bb5040e9e9ddc88045ad2938dcac06977cbf6",
                          "typeString": "literal_string \"Insufficient Allowance\""
                        },
                        "value": "Insufficient Allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f0ff8cd200538bae802ddf9006bb5040e9e9ddc88045ad2938dcac06977cbf6",
                          "typeString": "literal_string \"Insufficient Allowance\""
                        }
                      ],
                      "id": 138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1147:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1147:108:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "1147:108:0"
                },
                {
                  "expression": {
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 150,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1265:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 152,
                      "indexExpression": {
                        "id": 151,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "1273:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1265:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 153,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "1283:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1265:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "1265:25:0"
                },
                {
                  "expression": {
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 156,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1300:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 158,
                      "indexExpression": {
                        "id": 157,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "1308:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1300:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 159,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "1316:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1300:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "1300:23:0"
                },
                {
                  "expression": {
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 162,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "1333:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 166,
                        "indexExpression": {
                          "id": 163,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 129,
                          "src": "1343:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1333:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 167,
                      "indexExpression": {
                        "expression": {
                          "id": 164,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1350:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1350:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1333:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 168,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "1365:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1333:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "1333:39:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1389:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 137,
                  "id": 172,
                  "nodeType": "Return",
                  "src": "1382:11:0"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 174,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "1027:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "1057:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "1049:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1049:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1080:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "1072:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1072:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1101:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "1093:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1039:75:0"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "1131:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1131:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1130:6:0"
            },
            "scope": 175,
            "src": "1018:382:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 176,
        "src": "64:1338:0",
        "usedErrors": []
      }
    ],
    "src": "39:1364:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50600480546001600160a01b031916331790556103e8600055604080518082019091526005808252642a37b5b2b760d91b60209092019182526100559160019161006d565b50600080543382526002602052604090912055610141565b82805461007990610106565b90600052602060002090601f01602090048101928261009b57600085556100e1565b82601f106100b457805160ff19168380011785556100e1565b828001600101855582156100e1579182015b828111156100e15782518255916020019190600101906100c6565b506100ed9291506100f1565b5090565b5b808211156100ed57600081556001016100f2565b600181811c9082168061011a57607f821691505b6020821081141561013b57634e487b7160e01b600052602260045260246000fd5b50919050565b6105a8806101506000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806323b872dd1161005b57806323b872dd146100da57806370a08231146100ed5780638da5cb5b14610116578063a9059cbb1461014157600080fd5b806306fdde0314610082578063095ea7b3146100a057806318160ddd146100c3575b600080fd5b61008a610154565b60405161009791906103f9565b60405180910390f35b6100b36100ae36600461046a565b6101e2565b6040519015158152602001610097565b6100cc60005481565b604051908152602001610097565b6100b36100e8366004610494565b610225565b6100cc6100fb3660046104d0565b6001600160a01b031660009081526002602052604090205490565b600454610129906001600160a01b031681565b6040516001600160a01b039091168152602001610097565b6100b361014f36600461046a565b610332565b60018054610161906104f2565b80601f016020809104026020016040519081016040528092919081815260200182805461018d906104f2565b80156101da5780601f106101af576101008083540402835291602001916101da565b820191906000526020600020905b8154815290600101906020018083116101bd57829003601f168201915b505050505081565b60006001600160a01b0383166101f757600080fd5b503360009081526003602090815260408083206001600160a01b039590951683529390529190912055600190565b6001600160a01b03831660009081526003602090815260408083203384529091528120548211156102965760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420416c6c6f77616e636560501b60448201526064015b60405180910390fd5b6001600160a01b038416600090815260026020526040812080548492906102be908490610543565b90915550506001600160a01b038316600090815260026020526040812080548492906102eb90849061055a565b90915550506001600160a01b038416600090815260036020908152604080832033845290915281208054849290610323908490610543565b90915550600195945050505050565b60006001600160a01b03831661034757600080fd5b3360009081526002602052604090205482111561039f5760405162461bcd60e51b81526020600482015260166024820152756e6f742073756666696369656e742062616c616e636560501b604482015260640161028d565b33600090815260026020526040812080548492906103be908490610543565b90915550506001600160a01b038316600090815260026020526040812080548492906103eb90849061055a565b909155506001949350505050565b600060208083528351808285015260005b818110156104265785810183015185820160400152820161040a565b81811115610438576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461046557600080fd5b919050565b6000806040838503121561047d57600080fd5b6104868361044e565b946020939093013593505050565b6000806000606084860312156104a957600080fd5b6104b28461044e565b92506104c06020850161044e565b9150604084013590509250925092565b6000602082840312156104e257600080fd5b6104eb8261044e565b9392505050565b600181811c9082168061050657607f821691505b6020821081141561052757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156105555761055561052d565b500390565b6000821982111561056d5761056d61052d565b50019056fea2646970667358221220a7a35e0eed2921398500d61122e06dbf2020764e819498bb85e16ef39d8f335c64736f6c634300080c0033",
  "bytecodeSha1": "b69a912e7b6d54d119be00538f9cc6ad4614fba1",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Token",
  "coverageMap": {
    "branches": {
      "0": {
        "Token.approve": {
          "14": [
            910,
            932,
            true
          ]
        },
        "Token.transfer": {
          "16": [
            618,
            635,
            true
          ],
          "17": [
            654,
            684,
            true
          ]
        },
        "Token.transferFrom": {
          "15": [
            1168,
            1207,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Token.approve": {
          "1": [
            902,
            933
          ],
          "2": [
            943,
            984
          ],
          "3": [
            994,
            1005
          ]
        },
        "Token.balanceOf": {
          "0": [
            496,
            517
          ]
        },
        "Token.transfer": {
          "9": [
            610,
            636
          ],
          "10": [
            646,
            711
          ],
          "11": [
            721,
            751
          ],
          "12": [
            761,
            784
          ],
          "13": [
            794,
            805
          ]
        },
        "Token.transferFrom": {
          "4": [
            1147,
            1255
          ],
          "5": [
            1265,
            1290
          ],
          "6": [
            1300,
            1323
          ],
          "7": [
            1333,
            1372
          ],
          "8": [
            1382,
            1393
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c806323b872dd1161005b57806323b872dd146100da57806370a08231146100ed5780638da5cb5b14610116578063a9059cbb1461014157600080fd5b806306fdde0314610082578063095ea7b3146100a057806318160ddd146100c3575b600080fd5b61008a610154565b60405161009791906103f9565b60405180910390f35b6100b36100ae36600461046a565b6101e2565b6040519015158152602001610097565b6100cc60005481565b604051908152602001610097565b6100b36100e8366004610494565b610225565b6100cc6100fb3660046104d0565b6001600160a01b031660009081526002602052604090205490565b600454610129906001600160a01b031681565b6040516001600160a01b039091168152602001610097565b6100b361014f36600461046a565b610332565b60018054610161906104f2565b80601f016020809104026020016040519081016040528092919081815260200182805461018d906104f2565b80156101da5780601f106101af576101008083540402835291602001916101da565b820191906000526020600020905b8154815290600101906020018083116101bd57829003601f168201915b505050505081565b60006001600160a01b0383166101f757600080fd5b503360009081526003602090815260408083206001600160a01b039590951683529390529190912055600190565b6001600160a01b03831660009081526003602090815260408083203384529091528120548211156102965760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420416c6c6f77616e636560501b60448201526064015b60405180910390fd5b6001600160a01b038416600090815260026020526040812080548492906102be908490610543565b90915550506001600160a01b038316600090815260026020526040812080548492906102eb90849061055a565b90915550506001600160a01b038416600090815260036020908152604080832033845290915281208054849290610323908490610543565b90915550600195945050505050565b60006001600160a01b03831661034757600080fd5b3360009081526002602052604090205482111561039f5760405162461bcd60e51b81526020600482015260166024820152756e6f742073756666696369656e742062616c616e636560501b604482015260640161028d565b33600090815260026020526040812080548492906103be908490610543565b90915550506001600160a01b038316600090815260026020526040812080548492906103eb90849061055a565b909155506001949350505050565b600060208083528351808285015260005b818110156104265785810183015185820160400152820161040a565b81811115610438576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461046557600080fd5b919050565b6000806040838503121561047d57600080fd5b6104868361044e565b946020939093013593505050565b6000806000606084860312156104a957600080fd5b6104b28461044e565b92506104c06020850161044e565b9150604084013590509250925092565b6000602082840312156104e257600080fd5b6104eb8261044e565b9392505050565b600181811c9082168061050657607f821691505b6020821081141561052757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156105555761055561052d565b500390565b6000821982111561056d5761056d61052d565b50019056fea2646970667358221220a7a35e0eed2921398500d61122e06dbf2020764e819498bb85e16ef39d8f335c64736f6c634300080c0033",
  "deployedSourceMap": "64:1338:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;117:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;818:194;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:1;;1211:22;1193:41;;1181:2;1166:18;818:194:0;1053:187:1;85:26:0;;;;;;;;;1391:25:1;;;1379:2;1364:18;85:26:0;1245:177:1;1018:382:0;;;;;;:::i;:::-;;:::i;422:102::-;;;;;;:::i;:::-;-1:-1:-1;;;;;503:14:0;477:7;503:14;;;:7;:14;;;;;;;422:102;245:20;;;;;-1:-1:-1;;;;;245:20:0;;;;;;-1:-1:-1;;;;;2115:32:1;;;2097:51;;2085:2;2070:18;245:20:0;1951:203:1;530:282:0;;;;;;:::i;:::-;;:::i;117:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;818:194::-;886:4;-1:-1:-1;;;;;910:22:0;;902:31;;;;;;-1:-1:-1;953:10:0;943:21;;;;:9;:21;;;;;;;;-1:-1:-1;;;;;943:31:0;;;;;;;;;;;;;:41;1001:4;;818:194::o;1018:382::-;-1:-1:-1;;;;;1168:16:0;;1131:4;1168:16;;;:9;:16;;;;;;;;1185:10;1168:28;;;;;;;;:39;-1:-1:-1;1168:39:0;1147:108;;;;-1:-1:-1;;;1147:108:0;;2746:2:1;1147:108:0;;;2728:21:1;2785:2;2765:18;;;2758:30;-1:-1:-1;;;2804:18:1;;;2797:52;2866:18;;1147:108:0;;;;;;;;;-1:-1:-1;;;;;1265:14:0;;;;;;:7;:14;;;;;:25;;1283:7;;1265:14;:25;;1283:7;;1265:25;:::i;:::-;;;;-1:-1:-1;;;;;;;1300:12:0;;;;;;:7;:12;;;;;:23;;1316:7;;1300:12;:23;;1316:7;;1300:23;:::i;:::-;;;;-1:-1:-1;;;;;;;1333:16:0;;;;;;:9;:16;;;;;;;;1350:10;1333:28;;;;;;;:39;;1365:7;;1333:16;:39;;1365:7;;1333:39;:::i;:::-;;;;-1:-1:-1;1389:4:0;;1018:382;-1:-1:-1;;;;;1018:382:0:o;530:282::-;594:4;-1:-1:-1;;;;;618:17:0;;610:26;;;;;;662:10;654:19;;;;:7;:19;;;;;;:30;-1:-1:-1;654:30:0;646:65;;;;-1:-1:-1;;;646:65:0;;3492:2:1;646:65:0;;;3474:21:1;3531:2;3511:18;;;3504:30;-1:-1:-1;;;3550:18:1;;;3543:52;3612:18;;646:65:0;3290:346:1;646:65:0;729:10;721:19;;;;:7;:19;;;;;:30;;744:7;;721:19;:30;;744:7;;721:30;:::i;:::-;;;;-1:-1:-1;;;;;;;761:12:0;;;;;;:7;:12;;;;;:23;;777:7;;761:12;:23;;777:7;;761:23;:::i;:::-;;;;-1:-1:-1;801:4:0;;530:282;-1:-1:-1;;;;530:282:0:o;14:597:1:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:1;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:1:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1760:186::-;1819:6;1872:2;1860:9;1851:7;1847:23;1843:32;1840:52;;;1888:1;1885;1878:12;1840:52;1911:29;1930:9;1911:29;:::i;:::-;1901:39;1760:186;-1:-1:-1;;;1760:186:1:o;2159:380::-;2238:1;2234:12;;;;2281;;;2302:61;;2356:4;2348:6;2344:17;2334:27;;2302:61;2409:2;2401:6;2398:14;2378:18;2375:38;2372:161;;;2455:10;2450:3;2446:20;2443:1;2436:31;2490:4;2487:1;2480:15;2518:4;2515:1;2508:15;2372:161;;2159:380;;;:::o;2895:127::-;2956:10;2951:3;2947:20;2944:1;2937:31;2987:4;2984:1;2977:15;3011:4;3008:1;3001:15;3027:125;3067:4;3095:1;3092;3089:8;3086:34;;;3100:18;;:::i;:::-;-1:-1:-1;3137:9:1;;3027:125::o;3157:128::-;3197:3;3228:1;3224:6;3221:1;3218:13;3215:39;;;3234:18;;:::i;:::-;-1:-1:-1;3270:9:1;;3157:128::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    64,
    1402
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x23B872DD GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xC3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x154 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0xAE CALLDATASIZE PUSH1 0x4 PUSH2 0x46A JUMP JUMPDEST PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x97 JUMP JUMPDEST PUSH2 0xCC PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x97 JUMP JUMPDEST PUSH2 0xB3 PUSH2 0xE8 CALLDATASIZE PUSH1 0x4 PUSH2 0x494 JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST PUSH2 0xCC PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x129 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x97 JUMP JUMPDEST PUSH2 0xB3 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x46A JUMP JUMPDEST PUSH2 0x332 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x161 SWAP1 PUSH2 0x4F2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18D SWAP1 PUSH2 0x4F2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP4 MSTORE SWAP4 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x296 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E7420416C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2BE SWAP1 DUP5 SWAP1 PUSH2 0x543 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2EB SWAP1 DUP5 SWAP1 PUSH2 0x55A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x323 SWAP1 DUP5 SWAP1 PUSH2 0x543 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x39F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x6E6F742073756666696369656E742062616C616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x3BE SWAP1 DUP5 SWAP1 PUSH2 0x543 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x3EB SWAP1 DUP5 SWAP1 PUSH2 0x55A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x426 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x40A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x486 DUP4 PUSH2 0x44E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B2 DUP5 PUSH2 0x44E JUMP JUMPDEST SWAP3 POP PUSH2 0x4C0 PUSH1 0x20 DUP6 ADD PUSH2 0x44E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4EB DUP3 PUSH2 0x44E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x506 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x527 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x555 JUMPI PUSH2 0x555 PUSH2 0x52D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x56D JUMPI PUSH2 0x56D PUSH2 0x52D JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 LOG3 0x5E 0xE 0xED 0x29 0x21 CODECOPY DUP6 STOP 0xD6 GT 0x22 0xE0 PUSH14 0xBF2020764E819498BB85E16EF39D DUP16 CALLER 0x5C PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        64,
        1402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D"
    },
    "25": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "38": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "49": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA"
    },
    "53": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED"
    },
    "64": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "71": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x116"
    },
    "75": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "82": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x141"
    },
    "86": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "REVERT",
      "path": "0"
    },
    "91": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "92": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "93": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "98": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "EQ",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82"
    },
    "102": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "109": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0"
    },
    "113": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "120": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "124": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "128": {
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "129": {
      "first_revert": true,
      "fn": null,
      "offset": [
        64,
        1402
      ],
      "op": "REVERT",
      "path": "0"
    },
    "130": {
      "offset": [
        117,
        135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "131": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A"
    },
    "134": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "137": {
      "fn": null,
      "jump": "i",
      "offset": [
        117,
        135
      ],
      "op": "JUMP",
      "path": "0"
    },
    "138": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "139": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "141": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "142": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "145": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "146": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9"
    },
    "150": {
      "fn": null,
      "jump": "i",
      "offset": [
        117,
        135
      ],
      "op": "JUMP",
      "path": "0"
    },
    "151": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "154": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "155": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "156": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "157": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "SUB",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "RETURN",
      "path": "0"
    },
    "160": {
      "fn": "Token.approve",
      "offset": [
        818,
        1012
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "161": {
      "fn": "Token.approve",
      "offset": [
        818,
        1012
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB3"
    },
    "164": {
      "fn": "Token.approve",
      "offset": [
        818,
        1012
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE"
    },
    "167": {
      "fn": "Token.approve",
      "offset": [
        818,
        1012
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "168": {
      "fn": "Token.approve",
      "offset": [
        818,
        1012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "170": {
      "fn": "Token.approve",
      "offset": [
        818,
        1012
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46A"
    },
    "173": {
      "fn": "Token.approve",
      "jump": "i",
      "offset": [
        818,
        1012
      ],
      "op": "JUMP",
      "path": "0"
    },
    "174": {
      "fn": "Token.approve",
      "offset": [
        818,
        1012
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "175": {
      "fn": "Token.approve",
      "offset": [
        818,
        1012
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E2"
    },
    "178": {
      "fn": "Token.approve",
      "jump": "i",
      "offset": [
        818,
        1012
      ],
      "op": "JUMP",
      "path": "0"
    },
    "179": {
      "fn": "Token.approve",
      "offset": [
        818,
        1012
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "180": {
      "fn": "Token.approve",
      "offset": [
        818,
        1012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "182": {
      "fn": "Token.approve",
      "offset": [
        818,
        1012
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "183": {
      "op": "SWAP1"
    },
    "184": {
      "op": "ISZERO"
    },
    "185": {
      "op": "ISZERO"
    },
    "186": {
      "op": "DUP2"
    },
    "187": {
      "op": "MSTORE"
    },
    "188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "190": {
      "op": "ADD"
    },
    "191": {
      "fn": "Token.approve",
      "offset": [
        818,
        1012
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "194": {
      "op": "JUMP"
    },
    "195": {
      "offset": [
        85,
        111
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "196": {
      "fn": "Token.approve",
      "offset": [
        85,
        111
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC"
    },
    "199": {
      "fn": "Token.approve",
      "offset": [
        85,
        111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "201": {
      "fn": "Token.approve",
      "offset": [
        85,
        111
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "202": {
      "fn": "Token.approve",
      "offset": [
        85,
        111
      ],
      "op": "DUP2",
      "path": "0"
    },
    "203": {
      "fn": "Token.approve",
      "offset": [
        85,
        111
      ],
      "op": "JUMP",
      "path": "0"
    },
    "204": {
      "fn": "Token.approve",
      "offset": [
        85,
        111
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "205": {
      "fn": "Token.approve",
      "offset": [
        85,
        111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "207": {
      "fn": "Token.approve",
      "offset": [
        85,
        111
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "208": {
      "op": "SWAP1"
    },
    "209": {
      "op": "DUP2"
    },
    "210": {
      "op": "MSTORE"
    },
    "211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "213": {
      "op": "ADD"
    },
    "214": {
      "offset": [
        85,
        111
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "217": {
      "op": "JUMP"
    },
    "218": {
      "fn": "Token.transferFrom",
      "offset": [
        1018,
        1400
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "219": {
      "fn": "Token.transferFrom",
      "offset": [
        1018,
        1400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB3"
    },
    "222": {
      "fn": "Token.transferFrom",
      "offset": [
        1018,
        1400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE8"
    },
    "225": {
      "fn": "Token.transferFrom",
      "offset": [
        1018,
        1400
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "226": {
      "fn": "Token.transferFrom",
      "offset": [
        1018,
        1400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "228": {
      "fn": "Token.transferFrom",
      "offset": [
        1018,
        1400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x494"
    },
    "231": {
      "fn": "Token.transferFrom",
      "jump": "i",
      "offset": [
        1018,
        1400
      ],
      "op": "JUMP",
      "path": "0"
    },
    "232": {
      "fn": "Token.transferFrom",
      "offset": [
        1018,
        1400
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "233": {
      "fn": "Token.transferFrom",
      "offset": [
        1018,
        1400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x225"
    },
    "236": {
      "fn": "Token.transferFrom",
      "jump": "i",
      "offset": [
        1018,
        1400
      ],
      "op": "JUMP",
      "path": "0"
    },
    "237": {
      "fn": "Token.balanceOf",
      "offset": [
        422,
        524
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "238": {
      "fn": "Token.balanceOf",
      "offset": [
        422,
        524
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC"
    },
    "241": {
      "fn": "Token.balanceOf",
      "offset": [
        422,
        524
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB"
    },
    "244": {
      "fn": "Token.balanceOf",
      "offset": [
        422,
        524
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "245": {
      "fn": "Token.balanceOf",
      "offset": [
        422,
        524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "247": {
      "fn": "Token.balanceOf",
      "offset": [
        422,
        524
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D0"
    },
    "250": {
      "fn": "Token.balanceOf",
      "jump": "i",
      "offset": [
        422,
        524
      ],
      "op": "JUMP",
      "path": "0"
    },
    "251": {
      "fn": "Token.balanceOf",
      "offset": [
        422,
        524
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "258": {
      "op": "SHL"
    },
    "259": {
      "op": "SUB"
    },
    "260": {
      "fn": "Token.balanceOf",
      "offset": [
        503,
        517
      ],
      "op": "AND",
      "path": "0",
      "statement": 0
    },
    "261": {
      "fn": "Token.balanceOf",
      "offset": [
        477,
        484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "263": {
      "fn": "Token.balanceOf",
      "offset": [
        503,
        517
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "264": {
      "fn": "Token.balanceOf",
      "offset": [
        503,
        517
      ],
      "op": "DUP2",
      "path": "0"
    },
    "265": {
      "fn": "Token.balanceOf",
      "offset": [
        503,
        517
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "266": {
      "fn": "Token.balanceOf",
      "offset": [
        503,
        510
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "268": {
      "fn": "Token.balanceOf",
      "offset": [
        503,
        517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "270": {
      "fn": "Token.balanceOf",
      "offset": [
        503,
        517
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "271": {
      "fn": "Token.balanceOf",
      "offset": [
        503,
        517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "273": {
      "fn": "Token.balanceOf",
      "offset": [
        503,
        517
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "274": {
      "fn": "Token.balanceOf",
      "offset": [
        503,
        517
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "275": {
      "fn": "Token.balanceOf",
      "offset": [
        503,
        517
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "276": {
      "fn": "Token.balanceOf",
      "offset": [
        503,
        517
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "277": {
      "fn": "Token.balanceOf",
      "offset": [
        422,
        524
      ],
      "op": "JUMP",
      "path": "0"
    },
    "278": {
      "offset": [
        245,
        265
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "279": {
      "fn": "Token.balanceOf",
      "offset": [
        245,
        265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "281": {
      "fn": "Token.balanceOf",
      "offset": [
        245,
        265
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "282": {
      "fn": "Token.balanceOf",
      "offset": [
        245,
        265
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x129"
    },
    "285": {
      "fn": "Token.balanceOf",
      "offset": [
        245,
        265
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "292": {
      "op": "SHL"
    },
    "293": {
      "op": "SUB"
    },
    "294": {
      "offset": [
        245,
        265
      ],
      "op": "AND",
      "path": "0"
    },
    "295": {
      "fn": "Token.balanceOf",
      "offset": [
        245,
        265
      ],
      "op": "DUP2",
      "path": "0"
    },
    "296": {
      "fn": "Token.balanceOf",
      "offset": [
        245,
        265
      ],
      "op": "JUMP",
      "path": "0"
    },
    "297": {
      "fn": "Token.balanceOf",
      "offset": [
        245,
        265
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "298": {
      "fn": "Token.balanceOf",
      "offset": [
        245,
        265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "300": {
      "fn": "Token.balanceOf",
      "offset": [
        245,
        265
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "307": {
      "op": "SHL"
    },
    "308": {
      "op": "SUB"
    },
    "309": {
      "op": "SWAP1"
    },
    "310": {
      "op": "SWAP2"
    },
    "311": {
      "op": "AND"
    },
    "312": {
      "op": "DUP2"
    },
    "313": {
      "op": "MSTORE"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "316": {
      "op": "ADD"
    },
    "317": {
      "offset": [
        245,
        265
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "320": {
      "op": "JUMP"
    },
    "321": {
      "fn": "Token.transfer",
      "offset": [
        530,
        812
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "322": {
      "fn": "Token.transfer",
      "offset": [
        530,
        812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB3"
    },
    "325": {
      "fn": "Token.transfer",
      "offset": [
        530,
        812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "328": {
      "fn": "Token.transfer",
      "offset": [
        530,
        812
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "329": {
      "fn": "Token.transfer",
      "offset": [
        530,
        812
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "331": {
      "fn": "Token.transfer",
      "offset": [
        530,
        812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46A"
    },
    "334": {
      "fn": "Token.transfer",
      "jump": "i",
      "offset": [
        530,
        812
      ],
      "op": "JUMP",
      "path": "0"
    },
    "335": {
      "fn": "Token.transfer",
      "offset": [
        530,
        812
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "336": {
      "fn": "Token.transfer",
      "offset": [
        530,
        812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "339": {
      "fn": "Token.transfer",
      "jump": "i",
      "offset": [
        530,
        812
      ],
      "op": "JUMP",
      "path": "0"
    },
    "340": {
      "offset": [
        117,
        135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "341": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "343": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "344": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "345": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x161"
    },
    "348": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "349": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F2"
    },
    "352": {
      "fn": "Token.transfer",
      "jump": "i",
      "offset": [
        117,
        135
      ],
      "op": "JUMP",
      "path": "0"
    },
    "353": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "354": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "355": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "357": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "ADD",
      "path": "0"
    },
    "358": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "360": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "361": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "362": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DIV",
      "path": "0"
    },
    "363": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "MUL",
      "path": "0"
    },
    "364": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "366": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "ADD",
      "path": "0"
    },
    "367": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "369": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "370": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "371": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP2",
      "path": "0"
    },
    "372": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "ADD",
      "path": "0"
    },
    "373": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "375": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "376": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "377": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "378": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "379": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "380": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP2",
      "path": "0"
    },
    "381": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP2",
      "path": "0"
    },
    "382": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "383": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "385": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "ADD",
      "path": "0"
    },
    "386": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP3",
      "path": "0"
    },
    "387": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "388": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "389": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18D"
    },
    "392": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "393": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F2"
    },
    "396": {
      "fn": "Token.transfer",
      "jump": "i",
      "offset": [
        117,
        135
      ],
      "op": "JUMP",
      "path": "0"
    },
    "397": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "398": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "399": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "400": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA"
    },
    "403": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "404": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "405": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "407": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "LT",
      "path": "0"
    },
    "408": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF"
    },
    "411": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "412": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "415": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "416": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP4",
      "path": "0"
    },
    "417": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "418": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DIV",
      "path": "0"
    },
    "419": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "MUL",
      "path": "0"
    },
    "420": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP4",
      "path": "0"
    },
    "421": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "422": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "423": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "425": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "ADD",
      "path": "0"
    },
    "426": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "427": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA"
    },
    "430": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "JUMP",
      "path": "0"
    },
    "431": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "432": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP3",
      "path": "0"
    },
    "433": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "ADD",
      "path": "0"
    },
    "434": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "435": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "436": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "438": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "439": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "441": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "443": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "444": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "445": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "446": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP2",
      "path": "0"
    },
    "447": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "448": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP2",
      "path": "0"
    },
    "449": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "450": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "451": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "453": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "ADD",
      "path": "0"
    },
    "454": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "455": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "457": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "ADD",
      "path": "0"
    },
    "458": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "459": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP4",
      "path": "0"
    },
    "460": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "GT",
      "path": "0"
    },
    "461": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BD"
    },
    "464": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "465": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP3",
      "path": "0"
    },
    "466": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "467": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SUB",
      "path": "0"
    },
    "468": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "470": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "AND",
      "path": "0"
    },
    "471": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP3",
      "path": "0"
    },
    "472": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "ADD",
      "path": "0"
    },
    "473": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "474": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "475": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "POP",
      "path": "0"
    },
    "476": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "POP",
      "path": "0"
    },
    "477": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "POP",
      "path": "0"
    },
    "478": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "POP",
      "path": "0"
    },
    "479": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "POP",
      "path": "0"
    },
    "480": {
      "fn": "Token.transfer",
      "offset": [
        117,
        135
      ],
      "op": "DUP2",
      "path": "0"
    },
    "481": {
      "fn": "Token.transfer",
      "jump": "o",
      "offset": [
        117,
        135
      ],
      "op": "JUMP",
      "path": "0"
    },
    "482": {
      "fn": "Token.approve",
      "offset": [
        818,
        1012
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "483": {
      "fn": "Token.approve",
      "offset": [
        886,
        890
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "491": {
      "op": "SHL"
    },
    "492": {
      "op": "SUB"
    },
    "493": {
      "fn": "Token.approve",
      "offset": [
        910,
        932
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 1
    },
    "494": {
      "branch": 14,
      "fn": "Token.approve",
      "offset": [
        910,
        932
      ],
      "op": "AND",
      "path": "0"
    },
    "495": {
      "fn": "Token.approve",
      "offset": [
        902,
        933
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F7"
    },
    "498": {
      "branch": 14,
      "fn": "Token.approve",
      "offset": [
        902,
        933
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "499": {
      "fn": "Token.approve",
      "offset": [
        902,
        933
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "501": {
      "fn": "Token.approve",
      "offset": [
        902,
        933
      ],
      "op": "DUP1",
      "path": "0"
    },
    "502": {
      "fn": "Token.approve",
      "offset": [
        902,
        933
      ],
      "op": "REVERT",
      "path": "0"
    },
    "503": {
      "fn": "Token.approve",
      "offset": [
        902,
        933
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "504": {
      "op": "POP"
    },
    "505": {
      "fn": "Token.approve",
      "offset": [
        953,
        963
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 2
    },
    "506": {
      "fn": "Token.approve",
      "offset": [
        943,
        964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "508": {
      "fn": "Token.approve",
      "offset": [
        943,
        964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "509": {
      "fn": "Token.approve",
      "offset": [
        943,
        964
      ],
      "op": "DUP2",
      "path": "0"
    },
    "510": {
      "fn": "Token.approve",
      "offset": [
        943,
        964
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "511": {
      "fn": "Token.approve",
      "offset": [
        943,
        952
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "513": {
      "fn": "Token.approve",
      "offset": [
        943,
        964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "515": {
      "fn": "Token.approve",
      "offset": [
        943,
        964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "516": {
      "fn": "Token.approve",
      "offset": [
        943,
        964
      ],
      "op": "DUP2",
      "path": "0"
    },
    "517": {
      "fn": "Token.approve",
      "offset": [
        943,
        964
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "518": {
      "fn": "Token.approve",
      "offset": [
        943,
        964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "520": {
      "fn": "Token.approve",
      "offset": [
        943,
        964
      ],
      "op": "DUP1",
      "path": "0"
    },
    "521": {
      "fn": "Token.approve",
      "offset": [
        943,
        964
      ],
      "op": "DUP4",
      "path": "0"
    },
    "522": {
      "fn": "Token.approve",
      "offset": [
        943,
        964
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "529": {
      "op": "SHL"
    },
    "530": {
      "op": "SUB"
    },
    "531": {
      "fn": "Token.approve",
      "offset": [
        943,
        974
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "532": {
      "fn": "Token.approve",
      "offset": [
        943,
        974
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "533": {
      "fn": "Token.approve",
      "offset": [
        943,
        974
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "534": {
      "fn": "Token.approve",
      "offset": [
        943,
        974
      ],
      "op": "AND",
      "path": "0"
    },
    "535": {
      "fn": "Token.approve",
      "offset": [
        943,
        974
      ],
      "op": "DUP4",
      "path": "0"
    },
    "536": {
      "fn": "Token.approve",
      "offset": [
        943,
        974
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "537": {
      "fn": "Token.approve",
      "offset": [
        943,
        974
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "538": {
      "fn": "Token.approve",
      "offset": [
        943,
        974
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "539": {
      "fn": "Token.approve",
      "offset": [
        943,
        974
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "540": {
      "fn": "Token.approve",
      "offset": [
        943,
        974
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "541": {
      "fn": "Token.approve",
      "offset": [
        943,
        974
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "542": {
      "fn": "Token.approve",
      "offset": [
        943,
        974
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "543": {
      "fn": "Token.approve",
      "offset": [
        943,
        974
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "544": {
      "fn": "Token.approve",
      "offset": [
        943,
        984
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "545": {
      "fn": "Token.approve",
      "offset": [
        1001,
        1005
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x1"
    },
    "547": {
      "fn": "Token.approve",
      "offset": [
        1001,
        1005
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "548": {
      "fn": "Token.approve",
      "jump": "o",
      "offset": [
        818,
        1012
      ],
      "op": "JUMP",
      "path": "0"
    },
    "549": {
      "fn": "Token.transferFrom",
      "offset": [
        1018,
        1400
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "556": {
      "op": "SHL"
    },
    "557": {
      "op": "SUB"
    },
    "558": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1184
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 4
    },
    "559": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1184
      ],
      "op": "AND",
      "path": "0"
    },
    "560": {
      "fn": "Token.transferFrom",
      "offset": [
        1131,
        1135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "562": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1184
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "563": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1184
      ],
      "op": "DUP2",
      "path": "0"
    },
    "564": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1184
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "565": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1177
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "567": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1184
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "569": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1184
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "570": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1184
      ],
      "op": "DUP2",
      "path": "0"
    },
    "571": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1184
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "572": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1184
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "574": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1184
      ],
      "op": "DUP1",
      "path": "0"
    },
    "575": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1184
      ],
      "op": "DUP4",
      "path": "0"
    },
    "576": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1184
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "577": {
      "fn": "Token.transferFrom",
      "offset": [
        1185,
        1195
      ],
      "op": "CALLER",
      "path": "0"
    },
    "578": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1196
      ],
      "op": "DUP5",
      "path": "0"
    },
    "579": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1196
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "580": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1196
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "581": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1196
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "582": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1196
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "583": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1196
      ],
      "op": "DUP2",
      "path": "0"
    },
    "584": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1196
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "585": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1196
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "586": {
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1207
      ],
      "op": "DUP3",
      "path": "0"
    },
    "587": {
      "op": "GT"
    },
    "588": {
      "branch": 15,
      "fn": "Token.transferFrom",
      "offset": [
        1168,
        1207
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "589": {
      "fn": "Token.transferFrom",
      "offset": [
        1147,
        1255
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x296"
    },
    "592": {
      "branch": 15,
      "fn": "Token.transferFrom",
      "offset": [
        1147,
        1255
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "593": {
      "fn": "Token.transferFrom",
      "offset": [
        1147,
        1255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "595": {
      "fn": "Token.transferFrom",
      "offset": [
        1147,
        1255
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "596": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "600": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "602": {
      "op": "SHL"
    },
    "603": {
      "fn": "Token.transferFrom",
      "offset": [
        1147,
        1255
      ],
      "op": "DUP2",
      "path": "0"
    },
    "604": {
      "fn": "Token.transferFrom",
      "offset": [
        1147,
        1255
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "607": {
      "fn": "Token.transferFrom",
      "offset": [
        1147,
        1255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "609": {
      "fn": "Token.transferFrom",
      "offset": [
        1147,
        1255
      ],
      "op": "DUP3",
      "path": "0"
    },
    "610": {
      "fn": "Token.transferFrom",
      "offset": [
        1147,
        1255
      ],
      "op": "ADD",
      "path": "0"
    },
    "611": {
      "op": "MSTORE"
    },
    "612": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "614": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "616": {
      "op": "DUP3"
    },
    "617": {
      "op": "ADD"
    },
    "618": {
      "op": "MSTORE"
    },
    "619": {
      "op": "PUSH22",
      "value": "0x496E73756666696369656E7420416C6C6F77616E6365"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "644": {
      "op": "SHL"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "647": {
      "op": "DUP3"
    },
    "648": {
      "op": "ADD"
    },
    "649": {
      "op": "MSTORE"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "652": {
      "op": "ADD"
    },
    "653": {
      "fn": "Token.transferFrom",
      "offset": [
        1147,
        1255
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "654": {
      "fn": "Token.transferFrom",
      "offset": [
        1147,
        1255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "656": {
      "fn": "Token.transferFrom",
      "offset": [
        1147,
        1255
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "657": {
      "fn": "Token.transferFrom",
      "offset": [
        1147,
        1255
      ],
      "op": "DUP1",
      "path": "0"
    },
    "658": {
      "fn": "Token.transferFrom",
      "offset": [
        1147,
        1255
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "659": {
      "fn": "Token.transferFrom",
      "offset": [
        1147,
        1255
      ],
      "op": "SUB",
      "path": "0"
    },
    "660": {
      "fn": "Token.transferFrom",
      "offset": [
        1147,
        1255
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "661": {
      "fn": "Token.transferFrom",
      "offset": [
        1147,
        1255
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "662": {
      "fn": "Token.transferFrom",
      "offset": [
        1147,
        1255
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "669": {
      "op": "SHL"
    },
    "670": {
      "op": "SUB"
    },
    "671": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1279
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 5
    },
    "672": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "673": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "675": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "676": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1279
      ],
      "op": "DUP2",
      "path": "0"
    },
    "677": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1279
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "678": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1272
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "680": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "682": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1279
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "683": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "685": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1279
      ],
      "op": "DUP2",
      "path": "0"
    },
    "686": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1279
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "687": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1290
      ],
      "op": "DUP1",
      "path": "0"
    },
    "688": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1290
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "689": {
      "fn": "Token.transferFrom",
      "offset": [
        1283,
        1290
      ],
      "op": "DUP5",
      "path": "0"
    },
    "690": {
      "fn": "Token.transferFrom",
      "offset": [
        1283,
        1290
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "691": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "692": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1290
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BE"
    },
    "695": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1290
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "696": {
      "fn": "Token.transferFrom",
      "offset": [
        1283,
        1290
      ],
      "op": "DUP5",
      "path": "0"
    },
    "697": {
      "fn": "Token.transferFrom",
      "offset": [
        1283,
        1290
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "698": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1290
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x543"
    },
    "701": {
      "fn": "Token.transferFrom",
      "jump": "i",
      "offset": [
        1265,
        1290
      ],
      "op": "JUMP",
      "path": "0"
    },
    "702": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1290
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "703": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1290
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "704": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1290
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "705": {
      "fn": "Token.transferFrom",
      "offset": [
        1265,
        1290
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "706": {
      "op": "POP"
    },
    "707": {
      "op": "POP"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "714": {
      "op": "SHL"
    },
    "715": {
      "op": "SUB"
    },
    "716": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1312
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 6
    },
    "717": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1312
      ],
      "op": "AND",
      "path": "0"
    },
    "718": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "720": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1312
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "721": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1312
      ],
      "op": "DUP2",
      "path": "0"
    },
    "722": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1312
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "723": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "725": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "727": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1312
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "728": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "730": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1312
      ],
      "op": "DUP2",
      "path": "0"
    },
    "731": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1312
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "732": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1323
      ],
      "op": "DUP1",
      "path": "0"
    },
    "733": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1323
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "734": {
      "fn": "Token.transferFrom",
      "offset": [
        1316,
        1323
      ],
      "op": "DUP5",
      "path": "0"
    },
    "735": {
      "fn": "Token.transferFrom",
      "offset": [
        1316,
        1323
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "736": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1312
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "737": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EB"
    },
    "740": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1323
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "741": {
      "fn": "Token.transferFrom",
      "offset": [
        1316,
        1323
      ],
      "op": "DUP5",
      "path": "0"
    },
    "742": {
      "fn": "Token.transferFrom",
      "offset": [
        1316,
        1323
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "743": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55A"
    },
    "746": {
      "fn": "Token.transferFrom",
      "jump": "i",
      "offset": [
        1300,
        1323
      ],
      "op": "JUMP",
      "path": "0"
    },
    "747": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1323
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "748": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1323
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "749": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1323
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "750": {
      "fn": "Token.transferFrom",
      "offset": [
        1300,
        1323
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "751": {
      "op": "POP"
    },
    "752": {
      "op": "POP"
    },
    "753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "759": {
      "op": "SHL"
    },
    "760": {
      "op": "SUB"
    },
    "761": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1349
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 7
    },
    "762": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1349
      ],
      "op": "AND",
      "path": "0"
    },
    "763": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1349
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "765": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1349
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "766": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1349
      ],
      "op": "DUP2",
      "path": "0"
    },
    "767": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1349
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "768": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "770": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1349
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "772": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1349
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "773": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1349
      ],
      "op": "DUP2",
      "path": "0"
    },
    "774": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1349
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "775": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1349
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "777": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1349
      ],
      "op": "DUP1",
      "path": "0"
    },
    "778": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1349
      ],
      "op": "DUP4",
      "path": "0"
    },
    "779": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1349
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "780": {
      "fn": "Token.transferFrom",
      "offset": [
        1350,
        1360
      ],
      "op": "CALLER",
      "path": "0"
    },
    "781": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1361
      ],
      "op": "DUP5",
      "path": "0"
    },
    "782": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1361
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "783": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1361
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "784": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1361
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "785": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1361
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "786": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1361
      ],
      "op": "DUP2",
      "path": "0"
    },
    "787": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1361
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "788": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1372
      ],
      "op": "DUP1",
      "path": "0"
    },
    "789": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1372
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "790": {
      "fn": "Token.transferFrom",
      "offset": [
        1365,
        1372
      ],
      "op": "DUP5",
      "path": "0"
    },
    "791": {
      "fn": "Token.transferFrom",
      "offset": [
        1365,
        1372
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "792": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1349
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "793": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1372
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x323"
    },
    "796": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1372
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "797": {
      "fn": "Token.transferFrom",
      "offset": [
        1365,
        1372
      ],
      "op": "DUP5",
      "path": "0"
    },
    "798": {
      "fn": "Token.transferFrom",
      "offset": [
        1365,
        1372
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "799": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1372
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x543"
    },
    "802": {
      "fn": "Token.transferFrom",
      "jump": "i",
      "offset": [
        1333,
        1372
      ],
      "op": "JUMP",
      "path": "0"
    },
    "803": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1372
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "804": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1372
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "805": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1372
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "806": {
      "fn": "Token.transferFrom",
      "offset": [
        1333,
        1372
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "807": {
      "op": "POP"
    },
    "808": {
      "fn": "Token.transferFrom",
      "offset": [
        1389,
        1393
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x1"
    },
    "810": {
      "fn": "Token.transferFrom",
      "offset": [
        1389,
        1393
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "811": {
      "fn": "Token.transferFrom",
      "offset": [
        1018,
        1400
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "812": {
      "op": "POP"
    },
    "813": {
      "op": "POP"
    },
    "814": {
      "op": "POP"
    },
    "815": {
      "op": "POP"
    },
    "816": {
      "op": "POP"
    },
    "817": {
      "fn": "Token.transferFrom",
      "jump": "o",
      "offset": [
        1018,
        1400
      ],
      "op": "JUMP",
      "path": "0"
    },
    "818": {
      "fn": "Token.transfer",
      "offset": [
        530,
        812
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "819": {
      "fn": "Token.transfer",
      "offset": [
        594,
        598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "827": {
      "op": "SHL"
    },
    "828": {
      "op": "SUB"
    },
    "829": {
      "fn": "Token.transfer",
      "offset": [
        618,
        635
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 9
    },
    "830": {
      "branch": 16,
      "fn": "Token.transfer",
      "offset": [
        618,
        635
      ],
      "op": "AND",
      "path": "0"
    },
    "831": {
      "fn": "Token.transfer",
      "offset": [
        610,
        636
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x347"
    },
    "834": {
      "branch": 16,
      "fn": "Token.transfer",
      "offset": [
        610,
        636
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "835": {
      "fn": "Token.transfer",
      "offset": [
        610,
        636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "837": {
      "fn": "Token.transfer",
      "offset": [
        610,
        636
      ],
      "op": "DUP1",
      "path": "0"
    },
    "838": {
      "fn": "Token.transfer",
      "offset": [
        610,
        636
      ],
      "op": "REVERT",
      "path": "0"
    },
    "839": {
      "fn": "Token.transfer",
      "offset": [
        610,
        636
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "840": {
      "fn": "Token.transfer",
      "offset": [
        662,
        672
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 10
    },
    "841": {
      "fn": "Token.transfer",
      "offset": [
        654,
        673
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "843": {
      "fn": "Token.transfer",
      "offset": [
        654,
        673
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "844": {
      "fn": "Token.transfer",
      "offset": [
        654,
        673
      ],
      "op": "DUP2",
      "path": "0"
    },
    "845": {
      "fn": "Token.transfer",
      "offset": [
        654,
        673
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "846": {
      "fn": "Token.transfer",
      "offset": [
        654,
        661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "848": {
      "fn": "Token.transfer",
      "offset": [
        654,
        673
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "850": {
      "fn": "Token.transfer",
      "offset": [
        654,
        673
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "851": {
      "fn": "Token.transfer",
      "offset": [
        654,
        673
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "853": {
      "fn": "Token.transfer",
      "offset": [
        654,
        673
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "854": {
      "fn": "Token.transfer",
      "offset": [
        654,
        673
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "855": {
      "fn": "Token.transfer",
      "offset": [
        654,
        673
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "856": {
      "fn": "Token.transfer",
      "offset": [
        654,
        684
      ],
      "op": "DUP3",
      "path": "0"
    },
    "857": {
      "op": "GT"
    },
    "858": {
      "branch": 17,
      "fn": "Token.transfer",
      "offset": [
        654,
        684
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "859": {
      "fn": "Token.transfer",
      "offset": [
        646,
        711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39F"
    },
    "862": {
      "branch": 17,
      "fn": "Token.transfer",
      "offset": [
        646,
        711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "863": {
      "fn": "Token.transfer",
      "offset": [
        646,
        711
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "865": {
      "fn": "Token.transfer",
      "offset": [
        646,
        711
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "866": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "870": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "872": {
      "op": "SHL"
    },
    "873": {
      "fn": "Token.transfer",
      "offset": [
        646,
        711
      ],
      "op": "DUP2",
      "path": "0"
    },
    "874": {
      "fn": "Token.transfer",
      "offset": [
        646,
        711
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "877": {
      "fn": "Token.transfer",
      "offset": [
        646,
        711
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "879": {
      "fn": "Token.transfer",
      "offset": [
        646,
        711
      ],
      "op": "DUP3",
      "path": "0"
    },
    "880": {
      "fn": "Token.transfer",
      "offset": [
        646,
        711
      ],
      "op": "ADD",
      "path": "0"
    },
    "881": {
      "op": "MSTORE"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "886": {
      "op": "DUP3"
    },
    "887": {
      "op": "ADD"
    },
    "888": {
      "op": "MSTORE"
    },
    "889": {
      "op": "PUSH22",
      "value": "0x6E6F742073756666696369656E742062616C616E6365"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "914": {
      "op": "SHL"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "917": {
      "op": "DUP3"
    },
    "918": {
      "op": "ADD"
    },
    "919": {
      "op": "MSTORE"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "922": {
      "op": "ADD"
    },
    "923": {
      "fn": "Token.transfer",
      "offset": [
        646,
        711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28D"
    },
    "926": {
      "op": "JUMP"
    },
    "927": {
      "fn": "Token.transfer",
      "offset": [
        646,
        711
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "928": {
      "fn": "Token.transfer",
      "offset": [
        729,
        739
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 11
    },
    "929": {
      "fn": "Token.transfer",
      "offset": [
        721,
        740
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "931": {
      "fn": "Token.transfer",
      "offset": [
        721,
        740
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "932": {
      "fn": "Token.transfer",
      "offset": [
        721,
        740
      ],
      "op": "DUP2",
      "path": "0"
    },
    "933": {
      "fn": "Token.transfer",
      "offset": [
        721,
        740
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "934": {
      "fn": "Token.transfer",
      "offset": [
        721,
        728
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "936": {
      "fn": "Token.transfer",
      "offset": [
        721,
        740
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "938": {
      "fn": "Token.transfer",
      "offset": [
        721,
        740
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "939": {
      "fn": "Token.transfer",
      "offset": [
        721,
        740
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "941": {
      "fn": "Token.transfer",
      "offset": [
        721,
        740
      ],
      "op": "DUP2",
      "path": "0"
    },
    "942": {
      "fn": "Token.transfer",
      "offset": [
        721,
        740
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "943": {
      "fn": "Token.transfer",
      "offset": [
        721,
        751
      ],
      "op": "DUP1",
      "path": "0"
    },
    "944": {
      "fn": "Token.transfer",
      "offset": [
        721,
        751
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "945": {
      "fn": "Token.transfer",
      "offset": [
        744,
        751
      ],
      "op": "DUP5",
      "path": "0"
    },
    "946": {
      "fn": "Token.transfer",
      "offset": [
        744,
        751
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "947": {
      "fn": "Token.transfer",
      "offset": [
        721,
        740
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "948": {
      "fn": "Token.transfer",
      "offset": [
        721,
        751
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BE"
    },
    "951": {
      "fn": "Token.transfer",
      "offset": [
        721,
        751
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "952": {
      "fn": "Token.transfer",
      "offset": [
        744,
        751
      ],
      "op": "DUP5",
      "path": "0"
    },
    "953": {
      "fn": "Token.transfer",
      "offset": [
        744,
        751
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "954": {
      "fn": "Token.transfer",
      "offset": [
        721,
        751
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x543"
    },
    "957": {
      "fn": "Token.transfer",
      "jump": "i",
      "offset": [
        721,
        751
      ],
      "op": "JUMP",
      "path": "0"
    },
    "958": {
      "fn": "Token.transfer",
      "offset": [
        721,
        751
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "959": {
      "fn": "Token.transfer",
      "offset": [
        721,
        751
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "960": {
      "fn": "Token.transfer",
      "offset": [
        721,
        751
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "961": {
      "fn": "Token.transfer",
      "offset": [
        721,
        751
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "962": {
      "op": "POP"
    },
    "963": {
      "op": "POP"
    },
    "964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "970": {
      "op": "SHL"
    },
    "971": {
      "op": "SUB"
    },
    "972": {
      "fn": "Token.transfer",
      "offset": [
        761,
        773
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 12
    },
    "973": {
      "fn": "Token.transfer",
      "offset": [
        761,
        773
      ],
      "op": "AND",
      "path": "0"
    },
    "974": {
      "fn": "Token.transfer",
      "offset": [
        761,
        773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "976": {
      "fn": "Token.transfer",
      "offset": [
        761,
        773
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "977": {
      "fn": "Token.transfer",
      "offset": [
        761,
        773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "978": {
      "fn": "Token.transfer",
      "offset": [
        761,
        773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "979": {
      "fn": "Token.transfer",
      "offset": [
        761,
        768
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "981": {
      "fn": "Token.transfer",
      "offset": [
        761,
        773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "983": {
      "fn": "Token.transfer",
      "offset": [
        761,
        773
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "984": {
      "fn": "Token.transfer",
      "offset": [
        761,
        773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "986": {
      "fn": "Token.transfer",
      "offset": [
        761,
        773
      ],
      "op": "DUP2",
      "path": "0"
    },
    "987": {
      "fn": "Token.transfer",
      "offset": [
        761,
        773
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "988": {
      "fn": "Token.transfer",
      "offset": [
        761,
        784
      ],
      "op": "DUP1",
      "path": "0"
    },
    "989": {
      "fn": "Token.transfer",
      "offset": [
        761,
        784
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "990": {
      "fn": "Token.transfer",
      "offset": [
        777,
        784
      ],
      "op": "DUP5",
      "path": "0"
    },
    "991": {
      "fn": "Token.transfer",
      "offset": [
        777,
        784
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "992": {
      "fn": "Token.transfer",
      "offset": [
        761,
        773
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "993": {
      "fn": "Token.transfer",
      "offset": [
        761,
        784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EB"
    },
    "996": {
      "fn": "Token.transfer",
      "offset": [
        761,
        784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "997": {
      "fn": "Token.transfer",
      "offset": [
        777,
        784
      ],
      "op": "DUP5",
      "path": "0"
    },
    "998": {
      "fn": "Token.transfer",
      "offset": [
        777,
        784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "999": {
      "fn": "Token.transfer",
      "offset": [
        761,
        784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55A"
    },
    "1002": {
      "fn": "Token.transfer",
      "jump": "i",
      "offset": [
        761,
        784
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1003": {
      "fn": "Token.transfer",
      "offset": [
        761,
        784
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1004": {
      "fn": "Token.transfer",
      "offset": [
        761,
        784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1005": {
      "fn": "Token.transfer",
      "offset": [
        761,
        784
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1006": {
      "fn": "Token.transfer",
      "offset": [
        761,
        784
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "fn": "Token.transfer",
      "offset": [
        801,
        805
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x1"
    },
    "1010": {
      "fn": "Token.transfer",
      "offset": [
        801,
        805
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1011": {
      "fn": "Token.transfer",
      "offset": [
        530,
        812
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1012": {
      "op": "POP"
    },
    "1013": {
      "op": "POP"
    },
    "1014": {
      "op": "POP"
    },
    "1015": {
      "op": "POP"
    },
    "1016": {
      "fn": "Token.transfer",
      "jump": "o",
      "offset": [
        530,
        812
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1017": {
      "op": "JUMPDEST"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1022": {
      "op": "DUP1"
    },
    "1023": {
      "op": "DUP4"
    },
    "1024": {
      "op": "MSTORE"
    },
    "1025": {
      "op": "DUP4"
    },
    "1026": {
      "op": "MLOAD"
    },
    "1027": {
      "op": "DUP1"
    },
    "1028": {
      "op": "DUP3"
    },
    "1029": {
      "op": "DUP6"
    },
    "1030": {
      "op": "ADD"
    },
    "1031": {
      "op": "MSTORE"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1034": {
      "op": "JUMPDEST"
    },
    "1035": {
      "op": "DUP2"
    },
    "1036": {
      "op": "DUP2"
    },
    "1037": {
      "op": "LT"
    },
    "1038": {
      "op": "ISZERO"
    },
    "1039": {
      "op": "PUSH2",
      "value": "0x426"
    },
    "1042": {
      "op": "JUMPI"
    },
    "1043": {
      "op": "DUP6"
    },
    "1044": {
      "op": "DUP2"
    },
    "1045": {
      "op": "ADD"
    },
    "1046": {
      "op": "DUP4"
    },
    "1047": {
      "op": "ADD"
    },
    "1048": {
      "op": "MLOAD"
    },
    "1049": {
      "op": "DUP6"
    },
    "1050": {
      "op": "DUP3"
    },
    "1051": {
      "op": "ADD"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1054": {
      "op": "ADD"
    },
    "1055": {
      "op": "MSTORE"
    },
    "1056": {
      "op": "DUP3"
    },
    "1057": {
      "op": "ADD"
    },
    "1058": {
      "op": "PUSH2",
      "value": "0x40A"
    },
    "1061": {
      "op": "JUMP"
    },
    "1062": {
      "op": "JUMPDEST"
    },
    "1063": {
      "op": "DUP2"
    },
    "1064": {
      "op": "DUP2"
    },
    "1065": {
      "op": "GT"
    },
    "1066": {
      "op": "ISZERO"
    },
    "1067": {
      "op": "PUSH2",
      "value": "0x438"
    },
    "1070": {
      "op": "JUMPI"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1075": {
      "op": "DUP4"
    },
    "1076": {
      "op": "DUP8"
    },
    "1077": {
      "op": "ADD"
    },
    "1078": {
      "op": "ADD"
    },
    "1079": {
      "op": "MSTORE"
    },
    "1080": {
      "op": "JUMPDEST"
    },
    "1081": {
      "op": "POP"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1084": {
      "op": "ADD"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1087": {
      "op": "NOT"
    },
    "1088": {
      "op": "AND"
    },
    "1089": {
      "op": "SWAP3"
    },
    "1090": {
      "op": "SWAP1"
    },
    "1091": {
      "op": "SWAP3"
    },
    "1092": {
      "op": "ADD"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1095": {
      "op": "ADD"
    },
    "1096": {
      "op": "SWAP4"
    },
    "1097": {
      "op": "SWAP3"
    },
    "1098": {
      "op": "POP"
    },
    "1099": {
      "op": "POP"
    },
    "1100": {
      "op": "POP"
    },
    "1101": {
      "jump": "o",
      "op": "JUMP"
    },
    "1102": {
      "op": "JUMPDEST"
    },
    "1103": {
      "op": "DUP1"
    },
    "1104": {
      "op": "CALLDATALOAD"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1111": {
      "op": "SHL"
    },
    "1112": {
      "op": "SUB"
    },
    "1113": {
      "op": "DUP2"
    },
    "1114": {
      "op": "AND"
    },
    "1115": {
      "op": "DUP2"
    },
    "1116": {
      "op": "EQ"
    },
    "1117": {
      "op": "PUSH2",
      "value": "0x465"
    },
    "1120": {
      "op": "JUMPI"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1123": {
      "op": "DUP1"
    },
    "1124": {
      "op": "REVERT"
    },
    "1125": {
      "op": "JUMPDEST"
    },
    "1126": {
      "op": "SWAP2"
    },
    "1127": {
      "op": "SWAP1"
    },
    "1128": {
      "op": "POP"
    },
    "1129": {
      "jump": "o",
      "op": "JUMP"
    },
    "1130": {
      "op": "JUMPDEST"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1133": {
      "op": "DUP1"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1136": {
      "op": "DUP4"
    },
    "1137": {
      "op": "DUP6"
    },
    "1138": {
      "op": "SUB"
    },
    "1139": {
      "op": "SLT"
    },
    "1140": {
      "op": "ISZERO"
    },
    "1141": {
      "op": "PUSH2",
      "value": "0x47D"
    },
    "1144": {
      "op": "JUMPI"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1147": {
      "op": "DUP1"
    },
    "1148": {
      "op": "REVERT"
    },
    "1149": {
      "op": "JUMPDEST"
    },
    "1150": {
      "op": "PUSH2",
      "value": "0x486"
    },
    "1153": {
      "op": "DUP4"
    },
    "1154": {
      "op": "PUSH2",
      "value": "0x44E"
    },
    "1157": {
      "jump": "i",
      "op": "JUMP"
    },
    "1158": {
      "op": "JUMPDEST"
    },
    "1159": {
      "op": "SWAP5"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1162": {
      "op": "SWAP4"
    },
    "1163": {
      "op": "SWAP1"
    },
    "1164": {
      "op": "SWAP4"
    },
    "1165": {
      "op": "ADD"
    },
    "1166": {
      "op": "CALLDATALOAD"
    },
    "1167": {
      "op": "SWAP4"
    },
    "1168": {
      "op": "POP"
    },
    "1169": {
      "op": "POP"
    },
    "1170": {
      "op": "POP"
    },
    "1171": {
      "jump": "o",
      "op": "JUMP"
    },
    "1172": {
      "op": "JUMPDEST"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1175": {
      "op": "DUP1"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1180": {
      "op": "DUP5"
    },
    "1181": {
      "op": "DUP7"
    },
    "1182": {
      "op": "SUB"
    },
    "1183": {
      "op": "SLT"
    },
    "1184": {
      "op": "ISZERO"
    },
    "1185": {
      "op": "PUSH2",
      "value": "0x4A9"
    },
    "1188": {
      "op": "JUMPI"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1191": {
      "op": "DUP1"
    },
    "1192": {
      "op": "REVERT"
    },
    "1193": {
      "op": "JUMPDEST"
    },
    "1194": {
      "op": "PUSH2",
      "value": "0x4B2"
    },
    "1197": {
      "op": "DUP5"
    },
    "1198": {
      "op": "PUSH2",
      "value": "0x44E"
    },
    "1201": {
      "jump": "i",
      "op": "JUMP"
    },
    "1202": {
      "op": "JUMPDEST"
    },
    "1203": {
      "op": "SWAP3"
    },
    "1204": {
      "op": "POP"
    },
    "1205": {
      "op": "PUSH2",
      "value": "0x4C0"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1210": {
      "op": "DUP6"
    },
    "1211": {
      "op": "ADD"
    },
    "1212": {
      "op": "PUSH2",
      "value": "0x44E"
    },
    "1215": {
      "jump": "i",
      "op": "JUMP"
    },
    "1216": {
      "op": "JUMPDEST"
    },
    "1217": {
      "op": "SWAP2"
    },
    "1218": {
      "op": "POP"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1221": {
      "op": "DUP5"
    },
    "1222": {
      "op": "ADD"
    },
    "1223": {
      "op": "CALLDATALOAD"
    },
    "1224": {
      "op": "SWAP1"
    },
    "1225": {
      "op": "POP"
    },
    "1226": {
      "op": "SWAP3"
    },
    "1227": {
      "op": "POP"
    },
    "1228": {
      "op": "SWAP3"
    },
    "1229": {
      "op": "POP"
    },
    "1230": {
      "op": "SWAP3"
    },
    "1231": {
      "jump": "o",
      "op": "JUMP"
    },
    "1232": {
      "op": "JUMPDEST"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1237": {
      "op": "DUP3"
    },
    "1238": {
      "op": "DUP5"
    },
    "1239": {
      "op": "SUB"
    },
    "1240": {
      "op": "SLT"
    },
    "1241": {
      "op": "ISZERO"
    },
    "1242": {
      "op": "PUSH2",
      "value": "0x4E2"
    },
    "1245": {
      "op": "JUMPI"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1248": {
      "op": "DUP1"
    },
    "1249": {
      "op": "REVERT"
    },
    "1250": {
      "op": "JUMPDEST"
    },
    "1251": {
      "op": "PUSH2",
      "value": "0x4EB"
    },
    "1254": {
      "op": "DUP3"
    },
    "1255": {
      "op": "PUSH2",
      "value": "0x44E"
    },
    "1258": {
      "jump": "i",
      "op": "JUMP"
    },
    "1259": {
      "op": "JUMPDEST"
    },
    "1260": {
      "op": "SWAP4"
    },
    "1261": {
      "op": "SWAP3"
    },
    "1262": {
      "op": "POP"
    },
    "1263": {
      "op": "POP"
    },
    "1264": {
      "op": "POP"
    },
    "1265": {
      "jump": "o",
      "op": "JUMP"
    },
    "1266": {
      "op": "JUMPDEST"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1269": {
      "op": "DUP2"
    },
    "1270": {
      "op": "DUP2"
    },
    "1271": {
      "op": "SHR"
    },
    "1272": {
      "op": "SWAP1"
    },
    "1273": {
      "op": "DUP3"
    },
    "1274": {
      "op": "AND"
    },
    "1275": {
      "op": "DUP1"
    },
    "1276": {
      "op": "PUSH2",
      "value": "0x506"
    },
    "1279": {
      "op": "JUMPI"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1282": {
      "op": "DUP3"
    },
    "1283": {
      "op": "AND"
    },
    "1284": {
      "op": "SWAP2"
    },
    "1285": {
      "op": "POP"
    },
    "1286": {
      "op": "JUMPDEST"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1289": {
      "op": "DUP3"
    },
    "1290": {
      "op": "LT"
    },
    "1291": {
      "op": "DUP2"
    },
    "1292": {
      "op": "EQ"
    },
    "1293": {
      "op": "ISZERO"
    },
    "1294": {
      "op": "PUSH2",
      "value": "0x527"
    },
    "1297": {
      "op": "JUMPI"
    },
    "1298": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1305": {
      "op": "SHL"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1308": {
      "op": "MSTORE"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1313": {
      "op": "MSTORE"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1318": {
      "op": "REVERT"
    },
    "1319": {
      "op": "JUMPDEST"
    },
    "1320": {
      "op": "POP"
    },
    "1321": {
      "op": "SWAP2"
    },
    "1322": {
      "op": "SWAP1"
    },
    "1323": {
      "op": "POP"
    },
    "1324": {
      "jump": "o",
      "op": "JUMP"
    },
    "1325": {
      "op": "JUMPDEST"
    },
    "1326": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1333": {
      "op": "SHL"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1336": {
      "op": "MSTORE"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1341": {
      "op": "MSTORE"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1346": {
      "op": "REVERT"
    },
    "1347": {
      "op": "JUMPDEST"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1350": {
      "op": "DUP3"
    },
    "1351": {
      "op": "DUP3"
    },
    "1352": {
      "op": "LT"
    },
    "1353": {
      "op": "ISZERO"
    },
    "1354": {
      "op": "PUSH2",
      "value": "0x555"
    },
    "1357": {
      "op": "JUMPI"
    },
    "1358": {
      "op": "PUSH2",
      "value": "0x555"
    },
    "1361": {
      "op": "PUSH2",
      "value": "0x52D"
    },
    "1364": {
      "jump": "i",
      "op": "JUMP"
    },
    "1365": {
      "op": "JUMPDEST"
    },
    "1366": {
      "op": "POP"
    },
    "1367": {
      "op": "SUB"
    },
    "1368": {
      "op": "SWAP1"
    },
    "1369": {
      "jump": "o",
      "op": "JUMP"
    },
    "1370": {
      "op": "JUMPDEST"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1373": {
      "op": "DUP3"
    },
    "1374": {
      "op": "NOT"
    },
    "1375": {
      "op": "DUP3"
    },
    "1376": {
      "op": "GT"
    },
    "1377": {
      "op": "ISZERO"
    },
    "1378": {
      "op": "PUSH2",
      "value": "0x56D"
    },
    "1381": {
      "op": "JUMPI"
    },
    "1382": {
      "op": "PUSH2",
      "value": "0x56D"
    },
    "1385": {
      "op": "PUSH2",
      "value": "0x52D"
    },
    "1388": {
      "jump": "i",
      "op": "JUMP"
    },
    "1389": {
      "op": "JUMPDEST"
    },
    "1390": {
      "op": "POP"
    },
    "1391": {
      "op": "ADD"
    },
    "1392": {
      "op": "SWAP1"
    },
    "1393": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "1cca361e0438c06dc170a820fdbbefd829a890b8",
  "source": "// SPDX-License-Identifier: Unlicensed\npragma solidity ^0.8.0;\n\ncontract Token {\n    uint256 public totalSupply;\n    string public name;\n    mapping(address => uint256) balance;\n    mapping(address => mapping(address => uint256)) allowance;\n    address public owner;\n\n    constructor() {\n        owner = msg.sender;\n        totalSupply = 1000;\n        name = \"Token\";\n        balance[msg.sender] = totalSupply;\n    }\n\n    function balanceOf(address _user) public view returns (uint256) {\n        return balance[_user];\n    }\n\n    function transfer(address _to, uint256 _amount) public returns (bool) {\n        require(_to != address(0));\n        require(balance[msg.sender] >= _amount, \"not sufficient balance\");\n        balance[msg.sender] -= _amount;\n        balance[_to] += _amount;\n        return true;\n    }\n\n    function approve(address _spender, uint256 _amount) public returns (bool) {\n        require(_spender != address(0));\n        allowance[msg.sender][_spender] = _amount;\n        return true;\n    }\n\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _amount\n    ) public returns (bool) {\n        require(\n            allowance[_from][msg.sender] >= _amount,\n            \"Insufficient Allowance\"\n        );\n        balance[_from] -= _amount;\n        balance[_to] += _amount;\n        allowance[_from][msg.sender] -= _amount;\n        return true;\n    }\n}\n",
  "sourceMap": "64:1338:0:-:0;;;272:144;;;;;;;;;-1:-1:-1;296:5:0;:18;;-1:-1:-1;;;;;;296:18:0;304:10;296:18;;;338:4;296:5;324:18;352:14;;;;;;;;;;;;;-1:-1:-1;;;352:14:0;;;;;;;;;296:18;;352:14;:::i;:::-;-1:-1:-1;398:11:0;;;384:10;376:19;;:7;:19;;;;;;:33;64:1338;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;64:1338:0;;;-1:-1:-1;64:1338:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:1;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;64:1338:0;;;;;;",
  "sourcePath": "contracts/Token.sol",
  "type": "contract"
}